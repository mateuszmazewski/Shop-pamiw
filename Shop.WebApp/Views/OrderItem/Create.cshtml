@model Shop.WebApp.Models.OrderItemVM
@{List<ProductVM> ProductsList = ViewBag.ProductsList as List<ProductVM>;}

<h4>Dodawanie produktu do zamówienia</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <!--
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            -->
            <input asp-for="OrderId" class="form-control" readonly hidden />
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <br />
                <select asp-for="@Model.ProductId"
                        asp-items="@ProductsList.Select(x =>
                                  new SelectListItem()
                                  {
                                      Text = x.ToString(),
                                      Value = x.Id.ToString()
                                  });">
                </select>
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Powrót do zamówienia", "Details", "Order", new { id = Model.OrderId })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
